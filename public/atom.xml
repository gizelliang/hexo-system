<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gizel&#39;s Fantasy</title>
  
  <subtitle>程式新手轉職血淚史。</subtitle>
  <link href="https://gizelliang.github.io/atom.xml" rel="self"/>
  
  <link href="https://gizelliang.github.io/"/>
  <updated>2024-06-01T14:44:16.665Z</updated>
  <id>https://gizelliang.github.io/</id>
  
  <author>
    <name>Fish</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flex2</title>
    <link href="https://gizelliang.github.io/2024/06/01/flex2/"/>
    <id>https://gizelliang.github.io/2024/06/01/flex2/</id>
    <published>2024-06-01T14:44:16.000Z</published>
    <updated>2024-06-01T14:44:16.665Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>flex1</title>
    <link href="https://gizelliang.github.io/2024/06/01/flex1/"/>
    <id>https://gizelliang.github.io/2024/06/01/flex1/</id>
    <published>2024-06-01T14:44:10.000Z</published>
    <updated>2024-06-01T14:44:10.374Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Day2 CSS em and rem explained</title>
    <link href="https://gizelliang.github.io/2024/06/01/RWDDay2/"/>
    <id>https://gizelliang.github.io/2024/06/01/RWDDay2/</id>
    <published>2024-06-01T13:12:13.000Z</published>
    <updated>2024-06-01T14:32:59.734Z</updated>
    
    <content type="html"><![CDATA[<h2 id="em"><a href="#em" class="headerlink" title="em"></a>em</h2><ul><li>預設的瀏覽器字體尺寸為16px, 所以1em預設就是16px</li><li>父層若有具體設定font-size, 則1em的尺寸就會按照父層設定的font-size為主</li></ul><p><mark>父層若設定font-size為2em, 則代表所有子元素都會是以32px為1em</mark></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>EM測試<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent1</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">2em</span>;</span><br><span class="line">  <span class="comment">/*代表父層預設為32px*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.parent1</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line"> <span class="attribute">font-size</span>:<span class="number">2em</span>;<span class="comment">/* 32px*2 =64px*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>rem 則不會因為父層元素的字體大小而會有任何的變化，因為rem的單位值為html根部的預設字體大小，相反的em單位值會因為父層的字體大小而影響</p></blockquote><h2 id="同一子元素的其他屬性（除字體大小外）的em值"><a href="#同一子元素的其他屬性（除字體大小外）的em值" class="headerlink" title="同一子元素的其他屬性（除字體大小外）的em值"></a>同一子元素的其他屬性（除字體大小外）的em值</h2><ul><li>若是用em為單位來定義其他屬性的長寬，則會依據同一子元素的font-size設定值為em基準單位值來定義</li></ul><p><mark>具體來說，若是.parent1 h2字體大小設定為64px,則要設定其他.parent1 h2的長寬就會變成1em為64px</mark></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>EM測試<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent1</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">2em</span>;</span><br><span class="line">  <span class="comment">/*代表父層預設為32px*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.parent1</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line"> <span class="attribute">font-size</span>:<span class="number">2em</span>;<span class="comment">/* 32px*2 =64px,要繼承父層預設的字體大小*/</span></span><br><span class="line"> <span class="attribute">margin-bottom</span>:<span class="number">1em</span>;<span class="comment">/*64px*1=64px,要繼承此子元素字體大小的64px為一單位em值*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="em-rem"><a href="#em-rem" class="headerlink" title="em &amp; rem"></a>em &amp; rem</h2><ul><li><p>em是比較類似相對值的概念，且要考慮的變數較多，但可以維持一個區塊<mark>例如:按鈕</mark>的固定比例（因為其他屬性的em單位值會隨著各元素的字體大小em值而進行調整）</p></li><li><p>相對來說，rem比較一致，因為其參考的基準值只有根部html的字體大小值</p></li></ul><p><span style="color:red">px是絕對值，所以通常會盡量避免使用在RWD中，有可能因此需要更多斷點(media queries)</span></p>]]></content>
    
    
    <summary type="html">Kevin Powell Conquering Responsive Layout</summary>
    
    
    
    <category term="HTML" scheme="https://gizelliang.github.io/categories/HTML/"/>
    
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
    <category term="21DaysChallenge" scheme="https://gizelliang.github.io/tags/21DaysChallenge/"/>
    
  </entry>
  
  <entry>
    <title>Day 1 Using Percentages &amp; Avoiding Heights</title>
    <link href="https://gizelliang.github.io/2024/05/31/RWDDay1/"/>
    <id>https://gizelliang.github.io/2024/05/31/RWDDay1/</id>
    <published>2024-05-31T02:19:04.000Z</published>
    <updated>2024-06-01T11:28:59.716Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Percentages-vs-Fixed-widths"><a href="#Percentages-vs-Fixed-widths" class="headerlink" title="Percentages vs Fixed widths"></a>Percentages vs Fixed widths</h2><h2 id="Percentages-on-the-child"><a href="#Percentages-on-the-child" class="headerlink" title="Percentages on the child"></a>Percentages on the child</h2><blockquote><p>區塊元素若不設定具體寬度的話，通常就會佔滿整個畫面(代表預設寬度就是100%的父層元素)</p></blockquote><blockquote><p>運用百分比來設定寬度的話，就會讓其中的區塊元素一直隨著父層寬度來調整</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#23424A</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">50px</span>;<span class="comment">/*內推才可以看得得出父層元素*/</span></span><br><span class="line">  <span class="comment">/*width:500px; 設定固定寬度的話，就不會隨著畫面的縮放而縮放*/</span></span><br><span class="line">  <span class="attribute">width</span>:<span class="number">50%</span>;<span class="comment">/*responsive*/</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#38CFD9</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">250px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>子元素若有內文的話，也最好不要有固定高度，可以依靠內文來撐開高度</p></blockquote><blockquote><p>有固定高度的話，用overflow:hidden會截掉部分內文</p></blockquote>]]></content>
    
    
    <summary type="html">Kevin Powell Conquering Responsive Layout</summary>
    
    
    
    <category term="HTML" scheme="https://gizelliang.github.io/categories/HTML/"/>
    
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
    <category term="21DaysChallenge" scheme="https://gizelliang.github.io/tags/21DaysChallenge/"/>
    
  </entry>
  
  <entry>
    <title>Basic HTML &amp; CSS</title>
    <link href="https://gizelliang.github.io/2024/05/28/Basic/"/>
    <id>https://gizelliang.github.io/2024/05/28/Basic/</id>
    <published>2024-05-28T08:42:55.000Z</published>
    <updated>2024-05-31T03:37:25.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立HTML環境"><a href="#建立HTML環境" class="headerlink" title="建立HTML環境"></a>建立HTML環境</h2> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>主要有網頁的細部資訊，例如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>會呈現出網頁頁面的名稱</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>則會呈現出網頁畫面的HTML架構</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">//網頁瀏覽器改成UTF-8的編碼，打中文才不會有亂碼</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">//針對網頁螢幕解析度的優化</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uVIVTVM.png" alt="Image"></p><h2 id="a連結特殊用法"><a href="#a連結特殊用法" class="headerlink" title="a連結特殊用法"></a>a連結特殊用法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;連到Google&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//target=&quot;_blank&quot;會另開新的頁面連結到網站</span><br><span class="line">//title的內容會呈現出一個小小的彈跳視窗</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/N1Du1WW.png" alt="Image"></p><h2 id="CSS-簡介"><a href="#CSS-簡介" class="headerlink" title="CSS 簡介"></a>CSS 簡介</h2><blockquote><p><em><strong>link:css</strong></em> 插入css的熱鍵,放在head裡</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><em><strong>CSS Reset</strong></em>是一種清除瀏覽器預設樣式的初始化設定</p></blockquote><h2 id="行內元素-區塊元素"><a href="#行內元素-區塊元素" class="headerlink" title="行內元素 &amp; 區塊元素"></a>行內元素 &amp; 區塊元素</h2><p><a href="">Codepen Example</a></p><ul><li>區塊元素 <strong>Block Element</strong><ul><li>預設佔滿整個版面，會依照父層元素自適應延伸佔滿</li><li>寬度跟高度可以設定</li><li>另起一行，無法跟其他元素並列</li></ul></li><li>行內元素 <strong>Inline Element</strong>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>  是常見的排版用的行內元素，沒有任何語意<ul><li>在一個區塊中，不希望某個元素另起一行，就可以用行內元素包覆</li><li>行內元素是不能夠被設定寬高的，用<strong>display:block</strong>可以改行內元素的特性</li></ul></li></ul><h2 id="margin-padding"><a href="#margin-padding" class="headerlink" title="margin &amp; padding"></a>margin &amp; padding</h2><ul><li>margin 向外推</li><li>padding 向內推</li></ul><h2 id="margin-auto-text-align-center"><a href="#margin-auto-text-align-center" class="headerlink" title="margin:auto &amp; text-align:center"></a>margin:auto &amp; text-align:center</h2><p><a href="https://codepen.io/gizelliang/pen/mdYRYBa">Codepen Example</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>:auto;</span><br></pre></td></tr></table></figure><ul><li>依照父元素的寬度來做平均分配,水平置中</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-align</span>:center;</span><br></pre></td></tr></table></figure><ul><li>區塊內的文字段落要靠左，中，還是右</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background</span>:green;</span><br><span class="line">  <span class="attribute">margin-left</span>:auto;</span><br><span class="line">  <span class="attribute">margin-right</span>:auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">background</span>:gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:yellow;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dcVFCKr.png" alt="Image"></p><blockquote><p>區塊元素會自適應父層的寬度，不寫死高度的話，區塊元素會隨著內文延伸</p></blockquote><blockquote><p>網頁預設字體大小是16px,傾向不要寫死高度，都讓內文來撐高</p></blockquote>]]></content>
    
    
    <summary type="html">盒模型, inline &amp; block 及CSS初步設定</summary>
    
    
    
    <category term="HTML" scheme="https://gizelliang.github.io/categories/HTML/"/>
    
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
    <category term="HexSchool" scheme="https://gizelliang.github.io/tags/HexSchool/"/>
    
  </entry>
  
  <entry>
    <title>ajax</title>
    <link href="https://gizelliang.github.io/2024/05/24/ajax/"/>
    <id>https://gizelliang.github.io/2024/05/24/ajax/</id>
    <published>2024-05-24T03:10:43.000Z</published>
    <updated>2024-05-27T03:27:55.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AJAX-基本介紹"><a href="#AJAX-基本介紹" class="headerlink" title="AJAX 基本介紹"></a>AJAX 基本介紹</h2><p><img src="https://i.imgur.com/FbUrT8y.png" alt="Image"></p><blockquote><p>AJAX 是一種<mark>非同步的JS技術</mark></p></blockquote><blockquote><p>網頁載入時，<mark>只向資料庫要求指定區塊的資料</mark>，並不是傳統的整頁資料回傳，提升網頁回傳的速度及使用者體驗</p></blockquote><p><img src="https://i.imgur.com/jQ95WL8.png" alt="Image"></p><blockquote><p>Network 中可以檢視出有幾個網路請求，Waterfall則可以看出網路請求的執行順序，<mark>最優先被載入的應該是HTML架構.解析HTML時,再依程式碼中的先後順序分批向伺服器請求載入缺失的資訊</mark></p></blockquote><h2 id="網頁請求狀態碼"><a href="#網頁請求狀態碼" class="headerlink" title="網頁請求狀態碼"></a>網頁請求狀態碼</h2><blockquote><p>網路請求並非只能透過Browser送出，使用<mark>Javascript原生寫法 or 套件axios的寫法也可以</mark>也可以</p></blockquote><ul><li>404 <span style="color:#B03A2E"><strong>找不到請求資源</strong></span></li><li>304 用Browser暫存的file把網頁&amp;圖片顯示</li></ul>]]></content>
    
    
    <summary type="html">六角JS直播預錄</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hex_Arrow Function</title>
    <link href="https://gizelliang.github.io/2024/05/22/arrowFunction/"/>
    <id>https://gizelliang.github.io/2024/05/22/arrowFunction/</id>
    <published>2024-05-21T16:29:24.000Z</published>
    <updated>2024-05-24T03:10:25.344Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函式表達式-Function-Expression-函式陳述式-Function-Statement"><a href="#函式表達式-Function-Expression-函式陳述式-Function-Statement" class="headerlink" title="函式表達式(Function Expression) &amp; 函式陳述式 (Function Statement)"></a>函式表達式(Function Expression) &amp; 函式陳述式 (Function Statement)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此為函式表達式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">numB</span>(<span class="number">6</span>))</span><br><span class="line"><span class="keyword">const</span> numB = <span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Uncaught ReferenceError: numB is not defined</span></span><br></pre></td></tr></table></figure><blockquote><p>函式陳述式有Hoisting的作用，不論在陳述式前或是陳述式後，都可以呼叫函式</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此為函式陳述式</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">numA</span>(<span class="number">25</span>));<span class="comment">//print 625</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">numA</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">numA</span>(<span class="number">4</span>));<span class="comment">//print 16</span></span><br></pre></td></tr></table></figure><h2 id="箭頭函式寫法"><a href="#箭頭函式寫法" class="headerlink" title="箭頭函式寫法"></a>箭頭函式寫法</h2><ol><li>如果函式搭配到Return<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numberA = <span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Arrow Function, Return 可省略</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">numberA</span> = (<span class="params">x</span>)=&gt;&#123; <span class="keyword">return</span> x*x&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">numberB</span> = (<span class="params">x</span>)=&gt; x*x*x;</span><br></pre></td></tr></table></figure></li><li>如果只有一個參數，可以省略括號<br>多行程式碼的話，大括號就不可省略<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">numberA</span> = x=&gt;&#123; <span class="keyword">return</span> x*x&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">numberB</span> = x=&gt; x*x*x;</span><br></pre></td></tr></table></figure></li><li>沒有參數，還是要有空括號<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">numberA</span> = (<span class="params"></span>)=&gt;&#123; <span class="keyword">return</span> x*x&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">numberB</span> = (<span class="params"></span>)=&gt; x*x*x;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">JS直播箭頭函數預錄</summary>
    
    
    
    <category term="Javascript" scheme="https://gizelliang.github.io/categories/Javascript/"/>
    
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
    <category term="HexSchool" scheme="https://gizelliang.github.io/tags/HexSchool/"/>
    
  </entry>
  
  <entry>
    <title>Amos_Basic Selector</title>
    <link href="https://gizelliang.github.io/2024/05/21/selector1/"/>
    <id>https://gizelliang.github.io/2024/05/21/selector1/</id>
    <published>2024-05-21T07:24:43.000Z</published>
    <updated>2024-05-30T03:01:29.069Z</updated>
    
    <content type="html"><![CDATA[<h2 id="擬態選取器-hover-active"><a href="#擬態選取器-hover-active" class="headerlink" title="擬態選取器 :hover, :active"></a>擬態選取器 :hover, :active</h2><ul><li>:hover是滑鼠滑過去的效果,:active是滑鼠按著不放的效果</li></ul><h2 id="後代選取器"><a href="#後代選取器" class="headerlink" title="後代選取器"></a>後代選取器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;style1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;content&quot;</span>&gt;</span>這是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>父層的class(style1)可以將每個區塊內的子元素都指定為同一樣式，</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.style1</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.style1</span> <span class="selector-class">.content</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">金魚都能懂的CSS選取器第二章 &amp; 六角 div 與後代選擇器運用</summary>
    
    
    
    <category term="HTML/CSS" scheme="https://gizelliang.github.io/categories/HTML-CSS/"/>
    
    
    <category term="Book" scheme="https://gizelliang.github.io/tags/Book/"/>
    
    <category term="Amos" scheme="https://gizelliang.github.io/tags/Amos/"/>
    
  </entry>
  
  <entry>
    <title>Hex_forEach題型</title>
    <link href="https://gizelliang.github.io/2024/05/19/forEach3/"/>
    <id>https://gizelliang.github.io/2024/05/19/forEach3/</id>
    <published>2024-05-19T09:02:41.000Z</published>
    <updated>2024-05-27T11:13:02.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="網頁預想呈現畫面"><a href="#網頁預想呈現畫面" class="headerlink" title="網頁預想呈現畫面"></a>網頁預想呈現畫面</h1><p><img src="https://i.imgur.com/usFRj1I.png" alt="image"></p><h2 id="每日任務-Day25-forEach補充"><a href="#每日任務-Day25-forEach補充" class="headerlink" title="每日任務 Day25 forEach補充"></a>每日任務 Day25 forEach補充</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 參數 item 代表陣列中目前正在被處理的那個元素</span></span><br><span class="line"><span class="comment">// 參數 index 代表陣列中目前正在被處理的那個元素的索引值</span></span><br><span class="line"><span class="comment">// 參數 array 代表被處理的陣列本身，在此為 data</span></span><br><span class="line">data.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item, index, array);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1gjNwl0.png" alt="Image"></p><blockquote><p>這邊需要特別提醒，在 forEach() 函式內用 return 無法停止函式進行下一個 item。除非程式碼有誤，否則並沒有中止 forEach() 的辦法</p></blockquote><h2 id="決定資料格式-HTML"><a href="#決定資料格式-HTML" class="headerlink" title="決定資料格式(HTML)"></a>決定資料格式(HTML)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>新增資料<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;stationName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;充電站名稱&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;stationCharge&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;免費 or 付費&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Save&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="初始化一個空字串，再塞入ul-list-的innerHTML"><a href="#初始化一個空字串，再塞入ul-list-的innerHTML" class="headerlink" title="初始化一個空字串，再塞入ul.list 的innerHTML"></a>初始化一個空字串，再塞入ul.list 的innerHTML</h2><h2 id="初始化一個空物件，再塞入相對應屬性的值"><a href="#初始化一個空物件，再塞入相對應屬性的值" class="headerlink" title="初始化一個空物件，再塞入相對應屬性的值"></a>初始化一個空物件，再塞入相對應屬性的值</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data=[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">Charge</span>:<span class="string">&quot;Free&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Kathy Charge Station&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">Charge</span>:<span class="string">&quot;Coin&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Sophie Charge Station&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">Charge</span>:<span class="string">&quot;Free&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Cecilia Charge Station&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title class_">Charge</span>:<span class="string">&quot;Coin&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;George Charge Station&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> list = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.list&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">data.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item, index</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> content = <span class="string">`&lt;li&gt;<span class="subst">$&#123;item.name&#125;</span>, <span class="subst">$&#123;item.Charge&#125;</span>&lt;/li&gt;`</span>;<span class="comment">// 組好list.innerHTML指定的HTML樣式</span></span><br><span class="line">    str += content</span><br><span class="line">   </span><br><span class="line">&#125;)</span><br><span class="line">list.<span class="property">innerHTML</span> = str;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> stationName = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.stationName&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> stationCharge = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.stationCharge&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(stationName.<span class="property">value</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(stationCharge.<span class="property">value</span>);</span><br><span class="line">  <span class="keyword">let</span> obj =&#123;&#125;;</span><br><span class="line">  obj.<span class="property">name</span> = stationName.<span class="property">value</span>;</span><br><span class="line">  obj.<span class="property">Charge</span> = stationCharge.<span class="property">value</span>;</span><br><span class="line">  data.<span class="title function_">push</span>(obj);<span class="comment">//此行程式碼只是將新增的資料先放入data中</span></span><br><span class="line">  <span class="title function_">init</span>();<span class="comment">//沒有新增的那一筆，因為需要一開始初始化的資料結構</span></span><br><span class="line">  stationName.<span class="property">value</span>=<span class="string">&quot;&quot;</span>;<span class="comment">//清空欄位</span></span><br><span class="line">  stationCharge.<span class="property">value</span>=<span class="string">&quot;&quot;</span>;<span class="comment">//清空欄位</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="將要抓資料的forEach部分用function包覆，才可以一開始就在網頁上呈現需要的HTML樣式"><a href="#將要抓資料的forEach部分用function包覆，才可以一開始就在網頁上呈現需要的HTML樣式" class="headerlink" title="將要抓資料的forEach部分用function包覆，才可以一開始就在網頁上呈現需要的HTML樣式"></a>將要抓資料的forEach部分用function包覆，才可以一開始就在網頁上呈現需要的HTML樣式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> list = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.list&quot;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">data.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item, index</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> content = <span class="string">`&lt;li&gt;<span class="subst">$&#123;item.name&#125;</span>, <span class="subst">$&#123;item.Charge&#125;</span>&lt;/li&gt;`</span>;<span class="comment">// 組好list.innerHTML指定的HTML樣式</span></span><br><span class="line">    str += content</span><br><span class="line">   </span><br><span class="line">&#125;)</span><br><span class="line">list.<span class="property">innerHTML</span> = str;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">init</span>();</span><br></pre></td></tr></table></figure><h2 id="插入兩個按鈕去做相對應的資料篩選-監聽區塊為div-filter區塊"><a href="#插入兩個按鈕去做相對應的資料篩選-監聽區塊為div-filter區塊" class="headerlink" title="插入兩個按鈕去做相對應的資料篩選, 監聽區塊為div.filter區塊"></a>插入兩個按鈕去做相對應的資料篩選, 監聽區塊為div.filter區塊</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;filter&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span> =<span class="string">&quot;Free&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span> =<span class="string">&quot;Coin&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> stationFilter = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.filter&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stationFilter);</span><br><span class="line">stationFilter.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">nodeName</span>);</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lKXbMRE.png" alt="Image"></p><blockquote><p>stationFilter的區塊中並非所有區塊都有value, 只有點到按鈕才會觸發事件,才可以console.log(e.target.value), <strong>e.target.value</strong>在點擊到非按鈕的stationFilter區塊時，會因為沒有value而使e.target.value為<strong>undefined</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> stationFilter = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.filter&#x27;</span>);</span><br><span class="line">stationFilter.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">value</span> == <span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Where you click is empty space&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span></span><br><span class="line">  data.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">Charge</span> == e.<span class="property">target</span>.<span class="property">value</span>)&#123;</span><br><span class="line">      str+=<span class="string">`&lt;li&gt;<span class="subst">$&#123;item.name&#125;</span>,<span class="subst">$&#123;item.Charge&#125;</span>&lt;/li&gt;`</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  list.<span class="property">innerHTML</span> = str;</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><p><strong>之所以使用e.target.value而非e.target.nodeName是因為兩顆按鈕篩選出來的資料不一樣，若使用e.target.nodeName通常就是只有一顆按鈕</strong></p><ul><li><p><strong>e</strong> 會把事件觸發時的物件狀態快照起來,event通常在大括號中存活,Function結束時就會消失,<strong>e.target</strong> 會呈現出當下點擊到的HTML架構</p></li><li><p><strong>e.target.nodeName</strong>則會呈現出當下的ＨＴＭＬ標籤(例如~INPUT,LI)</p></li></ul></li></ul><blockquote><p>innerHTML會將其中的HTML全部清空後再帶入要塞入的內容</p></blockquote><blockquote><p><strong>const list</strong> 有被重複使用到,所以可以拉到最外層, init()上方，作為全域變數</p></blockquote>]]></content>
    
    
    <summary type="html">六角學院JS直播forEach練習</summary>
    
    
    
    <category term="Javascript" scheme="https://gizelliang.github.io/categories/Javascript/"/>
    
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
    <category term="HexSchool" scheme="https://gizelliang.github.io/tags/HexSchool/"/>
    
  </entry>
  
  <entry>
    <title>WesBos_Debugging</title>
    <link href="https://gizelliang.github.io/2024/05/18/debugging/"/>
    <id>https://gizelliang.github.io/2024/05/18/debugging/</id>
    <published>2024-05-18T11:35:21.000Z</published>
    <updated>2024-05-19T09:31:53.151Z</updated>
    
    
    
    
    <category term="Javascript" scheme="https://gizelliang.github.io/categories/Javascript/"/>
    
    
    <category term="WesBos" scheme="https://gizelliang.github.io/tags/WesBos/"/>
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
  </entry>
  
  <entry>
    <title>Hex_W4_Function</title>
    <link href="https://gizelliang.github.io/2024/05/14/function/"/>
    <id>https://gizelliang.github.io/2024/05/14/function/</id>
    <published>2024-05-14T04:13:16.000Z</published>
    <updated>2024-05-30T01:17:26.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函式的特性及使用時機"><a href="#函式的特性及使用時機" class="headerlink" title="函式的特性及使用時機"></a>函式的特性及使用時機</h2><ul><li>函式可以重複呼叫</li><li>封裝重複的程式碼</li><li>事件處理</li><li>非同步操作</li><li>參數只能存活在函數中</li><li>函式的參數是有順序的<blockquote><p><mark>console.log()</mark>只用來印出資料，而無法將值傳到函數之外，return才可以, <mark>console.log()</mark> 專門用在debug</p></blockquote></li></ul><h2 id="物件縮寫範例"><a href="#物件縮寫範例" class="headerlink" title="物件縮寫範例"></a>物件縮寫範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span> (name, gender)&#123;</span><br><span class="line">    <span class="keyword">const</span> obj = &#123;&#125;;</span><br><span class="line">    obj.<span class="property">name</span> = name;</span><br><span class="line">    obj.<span class="property">gender</span> = gender;</span><br><span class="line">    data.<span class="title function_">push</span>(obj);</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//物件中屬性和值為一樣的名稱，就可省略其中之一</span></span><br><span class="line"><span class="keyword">let</span> data = [];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span> (name, gender)&#123;</span><br><span class="line">  data.<span class="title function_">push</span>(&#123;name, gender&#125;);</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">六角學院JS直播第四堂 &amp; JS核心函數對應高階課程</summary>
    
    
    
    <category term="Javascript" scheme="https://gizelliang.github.io/categories/Javascript/"/>
    
    
    <category term="Video" scheme="https://gizelliang.github.io/tags/Video/"/>
    
    <category term="HexSchool" scheme="https://gizelliang.github.io/tags/HexSchool/"/>
    
  </entry>
  
  <entry>
    <title>008Days_Day 1</title>
    <link href="https://gizelliang.github.io/2024/05/14/operator1/"/>
    <id>https://gizelliang.github.io/2024/05/14/operator1/</id>
    <published>2024-05-14T03:58:33.000Z</published>
    <updated>2024-05-21T08:13:27.125Z</updated>
    
    <content type="html"><![CDATA[<h1 id="變數命名原則"><a href="#變數命名原則" class="headerlink" title="變數命名原則"></a>變數命名原則</h1><h2 id="變數架構"><a href="#變數架構" class="headerlink" title="變數架構"></a>變數架構</h2><p><img src="https://i.imgur.com/ia79Zze.png" alt="image"></p><ul><li>變數的命名的首尾可以為<code>英文字母,底線,或是$</code></li><li>Javascript 可以用中文命名,但有可能會亂碼</li><li>不可以是<code>Reserved Words 保留字</code> or <code>關鍵字 keyword</code></li><li>Javascript的語法是有<code>區分大小寫</code>的</li><li>Javascript是一個<code>弱型別</code>的語言, 宣告時無需指定型別,型別的資訊只在<code>值</code> 或 <code>物件</code> 本身才有型別的資訊,<strong>變數沒有型別,值才有</strong></li></ul><h1 id="變數的宣告"><a href="#變數的宣告" class="headerlink" title="變數的宣告"></a>變數的宣告</h1><ul><li><p>未經宣告只賦予值,造成<code>全域變數</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m=<span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m);<span class="comment">//print 1</span></span><br></pre></td></tr></table></figure></li><li><p>有宣告但未賦予值, 變數預設為<code>undefined</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m);<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></li><li><p>未經宣告但就要去使用時，出現<code>ReferenceError</code> 的錯誤</p></li><li><p><strong>var</strong>可以<code>重複宣告</code>同一變數，但<strong>let</strong>不能</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> m = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> n =<span class="number">3</span>;</span><br><span class="line"><span class="keyword">let</span> n=<span class="number">4</span>;<span class="comment">//Uncaught Syntax Error</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="變數的型別簡介及例外"><a href="#變數的型別簡介及例外" class="headerlink" title="變數的型別簡介及例外"></a>變數的型別簡介及例外</h1><h2 id="基本型別-Primitives"><a href="#基本型別-Primitives" class="headerlink" title="基本型別 (Primitives)"></a>基本型別 (Primitives)</h2><ul><li>String</li><li>Number</li><li>Boolean</li><li>Null</li><li>Undefined</li><li>Symbol <code>After ES6</code></li></ul><h2 id="基本型別的例外"><a href="#基本型別的例外" class="headerlink" title="基本型別的例外"></a>基本型別的例外</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> &#123;&#125;; <span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> []; <span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span>;<span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="variable language_">window</span>.<span class="property">alert</span>; <span class="comment">//function</span></span><br></pre></td></tr></table></figure><hr><h3 id="String-字串"><a href="#String-字串" class="headerlink" title="String 字串"></a>String 字串</h3><ul><li>不可單引號包單引號，也不可雙引號包雙引號, 若真的有這樣的情況，可以使用跳脫字元<code>\</code><strong>Escape Character</strong></li><li>多組的字串,可以用<code>+</code>連接</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Let\&#x27;s go!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> hello = <span class="string">&quot;Hello&quot;</span>+<span class="string">&quot;World&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="樣板字面值-Template-Literal"><a href="#樣板字面值-Template-Literal" class="headerlink" title="樣板字面值 (Template Literal)"></a>樣板字面值 (Template Literal)</h3><ul><li><em><strong><code>$&#123;&#125;</code></strong></em> 可以直接置入運算式 &amp; 變數</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a =<span class="number">5</span>;</span><br><span class="line"><span class="keyword">var</span> b=<span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Fifteen is <span class="subst">$&#123;a+b&#125;</span> and not <span class="subst">$&#123;<span class="number">2</span>*a + b&#125;</span>`</span>)</span><br></pre></td></tr></table></figure><h3 id="數字-Number"><a href="#數字-Number" class="headerlink" title="數字 (Number)"></a>數字 (Number)</h3><ul><li>JS只有一種數值的型別,就是number, 不管是整數或帶有小數點的浮點數字皆屬於這一類</li><li>Infinity (無限大), -Infinity（負無限大), NaN(不是數值,Not a Number)</li></ul><ol><li>正數除以0 &#x3D;&gt; <code>Infinity 無限大</code></li><li>負數除以0 &#x3D;&gt; <code>-Infinity 負無限大</code></li><li>0&#x2F;0, Infinity&#x2F;Infinity, -Infinity&#x2F;-Infinity &#x3D;&gt;<code>NaN</code></li></ol><h4 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">typeof</span>(<span class="title class_">NaN</span>); <span class="comment">//&#x27;number&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><code>NaN</code>與任何數字作運算，結果都是<code>NaN</code>,也就是說,<code>NaN</code>並不等於任何的數字，甚至是自己<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">NaN</span> === <span class="title class_">NaN</span> <span class="comment">//false</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="string">&quot;123&quot;</span>) <span class="comment">//false String 會透過隱含的Number()轉型成數字</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="string">&quot;NaN&quot;</span>)<span class="comment">//true 因為字串&quot;NaN&quot;無法轉型成數字</span></span><br></pre></td></tr></table></figure></li><li>十進位的小數無法完美的用<code>二進位</code>的方式表示，只能用無限循環的位數來趨近於十進位的小數<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.1</span>+<span class="number">0.2</span> === <span class="number">0.3</span> <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li>要數字精準的話，可將小數點在運算錢轉成整數，計算後再調整回來</li></ul><h3 id="布林值-True-False"><a href="#布林值-True-False" class="headerlink" title="布林值 (True &amp; False)"></a>布林值 (True &amp; False)</h3><ul><li>通常用在<code>判斷式</code>,作為控制<code>程式流程</code>的用途</li></ul><h3 id="null-undefined"><a href="#null-undefined" class="headerlink" title="null &amp; undefined"></a>null &amp; undefined</h3><blockquote><p>null 與 undefined的共通點就是, null只有一種值就是<code>null</code>, undefined 也只有一種值就是<code>undefined</code></p></blockquote><ul><li>此兩者透過<code>Boolean()</code>強制轉型成Boolean時，都會代表<code>false</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Number</span>(<span class="literal">null</span>);<span class="comment">//0</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">undefined</span>); <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><blockquote><p>undefined 代表<code>尚未給值, 未定義</code>, null則表示<code>此變數沒有值</code></p></blockquote></li></ul><h2 id="物件-Object"><a href="#物件-Object" class="headerlink" title="物件 (Object)"></a>物件 (Object)</h2><blockquote><p>所有基本型別(Primitives)以外的值都是物件, <code>零至多種屬性的集合</code></p></blockquote>]]></content>
    
    
    <summary type="html">008天重新認識Javascript 第一章</summary>
    
    
    
    <category term="Javascript" scheme="https://gizelliang.github.io/categories/Javascript/"/>
    
    
    <category term="008Days" scheme="https://gizelliang.github.io/tags/008Days/"/>
    
    <category term="Book" scheme="https://gizelliang.github.io/tags/Book/"/>
    
  </entry>
  
  <entry>
    <title>008Days_Day 2</title>
    <link href="https://gizelliang.github.io/2024/05/06/operator2/"/>
    <id>https://gizelliang.github.io/2024/05/06/operator2/</id>
    <published>2024-05-06T12:56:16.000Z</published>
    <updated>2024-05-21T08:09:16.604Z</updated>
    
    
    <summary type="html">008天重新認識Javascript 第二章</summary>
    
    
    
    <category term="Javascript" scheme="https://gizelliang.github.io/categories/Javascript/"/>
    
    
    <category term="008Days" scheme="https://gizelliang.github.io/tags/008Days/"/>
    
    <category term="Book" scheme="https://gizelliang.github.io/tags/Book/"/>
    
  </entry>
  
</feed>
